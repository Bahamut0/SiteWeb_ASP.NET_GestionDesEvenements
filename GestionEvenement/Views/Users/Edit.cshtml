@model GestionEvenement.Models.Model.UsersEM


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<h2 class="text-center text-capitalize">Modification Adhérent</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <h3>
        @Html.ActionLink(
               linkText: "Modifier l'adresse",
               actionName: "Edit",
               controllerName: "Adresses",
               routeValues: new { id = Model.IdAdresse },
               htmlAttributes: null)
    </h3>
    <input type="hidden" id="IdRole" name="IdRole" value="@Model.IdRole" />
    <input type="hidden" id="DateAdhesion" name="DateAdhesion" value="@Model.DateAdhesion" />
    <input type="hidden" id="IdAdresse" name="IdAdresse" value="@Model.IdAdresse" />
    <!--Code modifié-->
    <div class="row">
        <div class="form-group col-md-6">
            <!--Nom -->
            @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Prénom -->
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Prenom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Prenom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Prenom, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <div class="row">

        <!--Date de naissance -->

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.DateNaissance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.DateNaissance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateNaissance, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Genre -->
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">

                Homme
                @Html.RadioButtonFor(model => model.Genre, "true", new { @checked = Model.Genre })
                Femme
                @Html.RadioButtonFor(model => model.Genre, "false", new { @checked = Model.Genre })


            </div>
        </div>

    </div>
    <div class="row">

        <!--Email -->
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--Téléphone -->
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            <input type="file" name="photo" onchange="document.getElementById('photoUserEdit').src = window.URL.createObjectURL(this.files[0])" required value="@Model.Photo" />

        </div>
        <div class="col-md-4">
            <img id="photoUserEdit" src="@Model.Photo" width="200" height="100" alt="Photo de l'adhérent" class="img-thumbnail" />
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.IdTrancheAge, "IdTrancheAge", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.DropDownList("IdTrancheAge", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdTrancheAge, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        </div>
    </div>

    <div class="form-group">
        <div class="  my-3  text-center">
            <input type="submit" value="Enregistrer" class="btn btn-primary" /> | @Html.ActionLink("Liste des adhérents", "Index")
        </div>
    </div>

}

<script>
    var loadFile = function (event) {
        var output = document.getElementById('photoUserEdit');
        output.src = URL.createObjectURL(event.target.files[0]);
        output.onload = function () {
            URL.revokeObjectURL(output.src)
        }
    };
</script>
@* Adresse 

    <div class="row">
        <!--Numero de rue  -->
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.Adresse.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Adresse.Numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adresse.Numero, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Rue  -->
        <div class="form-group col-md-9">
            @Html.LabelFor(model => model.Adresse.Rue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Adresse.Rue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adresse.Rue, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Code Postal  -->

        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.Adresse.CodePostal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Adresse.CodePostal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adresse.CodePostal, "", new { @class = "text-danger" })
            </div>
        </div>
        <!-- Ville  -->
        <div class="form-group col-md-9">
            @Html.LabelFor(model => model.Adresse.Ville, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Adresse.Ville, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adresse.Ville, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

*@
